// <auto-generated />
using Fall2024_Assignment3_gstumpf.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fall2024_Assignment3_gstumpf.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241031010020_SeedMoviesAndActors")]
    partial class SeedMoviesAndActors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMDBLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 60,
                            Gender = "Male",
                            IMDBLink = "https://www.imdb.com/name/nm0000206/",
                            Name = "Keanu Reeves",
                            PhotoUrl = "https://example.com/keanu.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Age = 49,
                            Gender = "Male",
                            IMDBLink = "https://www.imdb.com/name/nm0000138/",
                            Name = "Leonardo DiCaprio",
                            PhotoUrl = "https://example.com/leonardo.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Age = 65,
                            Gender = "Male",
                            IMDBLink = "https://www.imdb.com/name/nm0000600/",
                            Name = "Tim Robbins",
                            PhotoUrl = "https://example.com/timrobbins.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Age = 50,
                            Gender = "Male",
                            IMDBLink = "https://www.imdb.com/name/nm0000288/",
                            Name = "Christian Bale",
                            PhotoUrl = "https://example.com/christianbale.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Age = 67,
                            Gender = "Male",
                            IMDBLink = "https://www.imdb.com/name/nm0000158/",
                            Name = "Tom Hanks",
                            PhotoUrl = "https://example.com/tomhanks.jpg"
                        });
                });

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMDBLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Sci-Fi",
                            IMDBLink = "https://www.imdb.com/title/tt0133093/",
                            PosterUrl = "https://example.com/matrix.jpg",
                            Title = "The Matrix",
                            Year = 1999
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Sci-Fi",
                            IMDBLink = "https://www.imdb.com/title/tt1375666/",
                            PosterUrl = "https://example.com/inception.jpg",
                            Title = "Inception",
                            Year = 2010
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Drama",
                            IMDBLink = "https://www.imdb.com/title/tt0111161/",
                            PosterUrl = "https://example.com/shawshank.jpg",
                            Title = "The Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Action",
                            IMDBLink = "https://www.imdb.com/title/tt0468569/",
                            PosterUrl = "https://example.com/darkknight.jpg",
                            Title = "The Dark Knight",
                            Year = 2008
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Drama",
                            IMDBLink = "https://www.imdb.com/title/tt0109830/",
                            PosterUrl = "https://example.com/forrestgump.jpg",
                            Title = "Forrest Gump",
                            Year = 1994
                        });
                });

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1,
                            Id = 0
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 2,
                            Id = 0
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 3,
                            Id = 0
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 4,
                            Id = 0
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 5,
                            Id = 0
                        });
                });

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.MovieActor", b =>
                {
                    b.HasOne("Fall2024_Assignment3_gstumpf.Models.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fall2024_Assignment3_gstumpf.Models.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("Fall2024_Assignment3_gstumpf.Models.Movie", b =>
                {
                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
